name: CD

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Build, Cypress Tests & Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Install Cypress binary (if needed)
        run: npx cypress install

      - name: Run Cypress tests (headless)
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          headless: true
          record: false
        env:
          # Optional: set CYPRESS_RECORD_KEY if you use Cypress Dashboard
          # CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: Upload Cypress artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts
          path: |
            cypress/screenshots
            cypress/videos
            cypress/results
            junit.xml
            mochawesome-report

      - name: Create GitHub Release and upload test artifacts
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ github.run_number }}
          name: Release ${{ github.run_number }}
          files: |
            cypress/screenshots/**
            cypress/videos/**
            cypress/results/**
            mochawesome-report/**

      # Optional deploy step (aktifkan dan atur secrets jika perlu)
      # - name: Deploy to server via SSH
      #   uses: appleboy/ssh-action@v0.1.9
      #   with:
      #     host: ${{ secrets.DEPLOY_HOST }}
      #     username: ${{ secrets.DEPLOY_USER }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     port: ${{ secrets.DEPLOY_PORT || '22' }}
      #     script: |
      #       # contoh deploy: copy artifacts dan restart service
      #       ls -la
